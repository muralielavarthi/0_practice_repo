- name: disable nodejs
  ansible.builtin.command: dnf module disable nodejs -y
- name: enable nodejs v20
  ansible.builtin.command: dnf module enable nodejs:20 -y
- name: install dependencies
  ansible.builtin.pip:
    name: "{{ item }}"
    state: present
  loop:
    - cryptography
    - PyMySQL
- name: install nodejs
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - nodejs
    - mysql
- name: create app directory
  ansible.builtin.file:
    path: "/app"
    state: directory
- name: download the code
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp
- name: unzip the code
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes
- name: npm install
  community.general.npm:
    path: /app
- name: create expense user
  ansible.builtin.user:
    name: expense
- name: copy backend service file
  ansible.builtin.template:
    src: /roles/backend/template/backend.service.js
    dest: /etc/system/systemd/backend.service
- name: load mysql file
  community.mysql.mysql_db:
    login_user: root
    login_password: "{{mysql_root_password}}"
    login_host: 172.31.17.117
    path: /app/schema/backend.sql
- name: daemon_reload
  ansible.builtin.systemd_service:
    name: backend
    state: restarted
    enabled: yes
    daemon_reload: true
